facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ ., scales = "free" )
ggplot( s.m, aes( x = factor( value ), fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ ., scales = "free" )
ggplot( s.m, aes( x = factor( value ), fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ . )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ ., scales = "fixed" )
s.f <- cut( s.m$variable, 1 )
s.f <- cut( s.m$value, 1 )
s.f <- cut( s.m$value, c( 1:40)) )
s.m <- melt( s, c( "x0" ) )
s.f <- cut( s.m$value, c( 1 : 40 ) )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ ., scales = "free_y" )
n <- 1000
x <- c( 1 : n )
nms <- c( 0, 1, 2, 4, 8, 16, 20, 24, 28, 30, 31, 32 )
nams <- as.character( paste0( "x", nms ) )
s <- data.frame( matrix( c( x, rep( 0, 8 * n ) ), nrow = n, ncol = length( nms ) ) )
names( s ) <- c( nams )
for( j in nams[ 2 : length( nams ) ] ) {
for( i in x ) {
s[ i, j ] <- mean( sample( mtcars$mpg, nms[ nams == j ] ) )
}
}
library( reshape )
library( ggplot2 )
library( praise )
s.m <- melt( s, c( "x0" ) )
s.m.f <- cut( s.m$value, c( 1 : 40 ) )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ ., scales = "free_y" )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, c( 1 : 40 ) )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_bar( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_bar( binwidth = 1 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( binwidth = .5 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( x = value * n ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
n <- 10000
x <- c( 1 : n )
nms <- c( 0, 1, 2, 4, 8, 16, 20, 24, 28, 30, 31, 32 )
nams <- as.character( paste0( "x", nms ) )
s <- data.frame( matrix( c( x, rep( 0, 8 * n ) ), nrow = n, ncol = length( nms ) ) )
names( s ) <- c( nams )
for( j in nams[ 2 : length( nams ) ] ) {
for( i in x ) {
s[ i, j ] <- mean( sample( mtcars$mpg, nms[ nams == j ] ) )
}
}
library( reshape )
library( ggplot2 )
library( praise )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, c( 1 : 40 ) )
s.m$v <- s.m$f * n;
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( x = v ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
s.m$v <- cut( s.m$value * n, 40 )
n <- 10000
x <- c( 1 : n )
nms <- c( 0, 1, 2, 4, 8, 16, 20, 24, 28, 30, 31, 32 )
nams <- as.character( paste0( "x", nms ) )
s <- data.frame( matrix( c( x, rep( 0, 8 * n ) ), nrow = n, ncol = length( nms ) ) )
names( s ) <- c( nams )
for( j in nams[ 2 : length( nams ) ] ) {
for( i in x ) {
s[ i, j ] <- mean( sample( mtcars$mpg, nms[ nams == j ] ) )
}
}
library( reshape )
library( ggplot2 )
library( praise )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, c( 1 : 40 ) )
s.m$v <- cut( s.m$value * n, 40 )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( x = v ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
s.m$v
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, 25 )
s.m$v <- cut( s.m$value * n, 25 )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( x = v ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( x = val ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( x = s.m$val ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = val, fill = variable ) ) +
geom_density( ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, 25 )
s.m$v <- cut( s.m$value * n, 25 )
ggplot( s.m, aes( x = v, fill = variable ) ) +
geom_density( ) +
geom_histogram( binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = v, fill = variable ) ) +
geom_density( ) +
geom_histogram( stat = "count", binwidth = .25 ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = v, fill = variable ) ) +
geom_density( ) +
geom_histogram( stat = "count" ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = v, fill = variable ) ) +
geom_density( ) +
geom_histogram( stat = "count" ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = v, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( f) +
geom_histogram(f ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( s.m$f) +
geom_histogram(f ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f )  +
geom_histogram( aes( f ) ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f ) ) +
geom_histogram( aes( f ) ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( f ) ) +
geom_histogram( aes( f ) ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( v ) ) +
geom_histogram( aes( v ) ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( v ) ) +
geom_histogram( aes( v ), stat = "count" ) +
facet_grid( variable ~ ., scales = "free_y" )
n <- 10000
x <- c( 1 : n )
nms <- c( 0, 1, 2, 4, 8, 16, 20, 24, 28, 30, 31, 32 )
nams <- as.character( paste0( "x", nms ) )
s <- data.frame( matrix( c( x, rep( 0, 8 * n ) ), nrow = n, ncol = length( nms ) ) )
names( s ) <- c( nams )
for( j in nams[ 2 : length( nams ) ] ) {
for( i in x ) {
s[ i, j ] <- mean( sample( mtcars$mpg, nms[ nams == j ] ) )
}
}
library( reshape )
library( ggplot2 )
library( praise )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, 25 )
s.m$v <- cut( s.m$value * n, 25 )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( v ) ) +
geom_histogram( aes( v ), stat = "count" ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( ) +
geom_histogram( stat = "count" ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = v, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( stat = "count" ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = f, fill = variable ) ) +
geom_density( ) +
geom_histogram(  stat = "count"  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( f ) +
geom_histogram(  stat = "count"  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( s.m$f ) +
geom_histogram(  stat = "count"  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f ) ) +
geom_histogram(  stat = "count"  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f ) ) +
geom_histogram(  stat = "count", bins = 50  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f ), bins = 50 ) +
geom_histogram(  stat = "count",   ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f ), bins = 50 ) +
geom_histogram(  stat = "count"   ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
geom_density( aes( s.m$f ) ) +
geom_histogram(  stat = "count", binwidth = 1  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
##    geom_density( aes( s.m$f ) ) +
geom_histogram(  stat = "count", binwidth = 1  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
##    geom_density( aes( s.m$f ) ) +
geom_histogram(  stat = "count", bins = 1  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = values, fill = variable ) ) +
##    geom_density( aes( s.m$f ) ) +
geom_histogram(  stat = "count", bins = 1  ) ##+
geom_histogram(  bins = 1  ) ##+
ggplot( s.m, aes( x = values, fill = variable ) ) +
##    geom_density( aes( s.m$f ) ) +
geom_histogram(  bins = 1  ) ##+
##facet_grid( variable ~ ., scales = "free_y" )
n <- 10000
x <- c( 1 : n )
nms <- c( 0, 1, 2, 4, 8, 16, 20, 24, 28, 30, 31, 32 )
nams <- as.character( paste0( "x", nms ) )
s <- data.frame( matrix( c( x, rep( 0, 8 * n ) ), nrow = n, ncol = length( nms ) ) )
names( s ) <- c( nams )
for( j in nams[ 2 : length( nams ) ] ) {
for( i in x ) {
s[ i, j ] <- mean( sample( mtcars$mpg, nms[ nams == j ] ) )
}
}
library( reshape )
library( ggplot2 )
library( praise )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, 25 )
s.m$v <- cut( s.m$value * n, 25 )
ggplot( s.m, aes( x = values, fill = variable ) ) +
##    geom_density( aes( s.m$f ) ) +
geom_histogram(  bins = 1  ) ##+
##facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
##    geom_density( aes( s.m$f ) ) +
geom_histogram(  bins = 1  ) ##+
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( aes( s.m$f ) ) +
geom_histogram(  bins = 1  ) ##+
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( aes( s.m$f ) ) +
geom_histogram(  bins = 1  ) ##+
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( bins = 1  ) +
facet_grid( variable ~ ., scales = "free_y" )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
n <- 100000
x <- c( 1 : n )
nms <- c( 0, 1, 2, 4, 8, 16, 20, 24, 28, 30, 31, 32 )
nams <- as.character( paste0( "x", nms ) )
s <- data.frame( matrix( c( x, rep( 0, 8 * n ) ), nrow = n, ncol = length( nms ) ) )
names( s ) <- c( nams )
for( j in nams[ 2 : length( nams ) ] ) {
for( i in x ) {
s[ i, j ] <- mean( sample( mtcars$mpg, nms[ nams == j ] ) )
}
}
library( reshape )
library( ggplot2 )
library( praise )
s.m <- melt( s, c( "x0" ) )
s.m$f <- cut( s.m$value, 25 )
s.m$v <- cut( s.m$value * n, 25 )
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( ) +
facet_grid( variable ~ ., scales = "free_y" )
summary( mtcars$mpg )
summary( s )
summary( s.m$value )
quantile(mtcars$mpg,c(.05,.5,.95))
quantile(s,c(.05,.5,.95))
praise()
s
ggplot( s.m, aes( x = value, fill = variable ) ) +
geom_density( ) +
geom_histogram( binwidth = .1 ) +
facet_grid( variable ~ ., scales = "free_y" )
dbinom(c(0:3),3,.5)
dbinom(c(0:2),3,.5)
dbinom(0:3,3,.5)
dbinom(50,100,.5)
dbinom(0,3,.5)
dbinom(3,3,.5)
dbinom(4,3,.5)
dbinom(0,3,.5)
dbinom(0,100,.5)
dbinom(10,100,.5)
dbinom(20,100,.5)
dbinom(100,100,.5)
dbinom(0:50,100,.5)
sum(dbinom(0:50,100,.5))
sum(dbinom(0:100,100,.5))
sum(dbinom(51:100,100,.5))
sum(dbinom(50:100,100,.5))
sum(dbinom(50:101,101,.5))
sum(dbinom(49:101,101,.5))
sum(dbinom(50:100,100,.5))
sum(dbinom(49:100,100,.5))
sum(dbinom(51:100,100,.5))
sum(dbinom(0:49,100,.5))
sum(dbinom(50,100,.5))
pbinom(50,100,.5)
pbinom(51,100,.5)
n<-100
df<.data.frame(x=c(0:n),d=dbinom(x,n,.5),p=pbinom(x,n,.5))
n<-100
df<data.frame(x=c(0:n),d=dbinom(x,n,.5),p=pbinom(x,n,.5))
n<-100
df<data.frame(x=c(0:n),d=dbinom(x,n,.5),p=pbinom(x,n,.5))
n<-100
x<-c(0:100)
df<data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
n<-100
x<-c(0:100)
df<data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
n<-100
x<-c(0:100)
df<data.frame(x=x)
n<-100
x<-c(0:100)
df<-data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
plot(df)
n<-1000
x<-c(0:n)
df<-data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
plot(df)
n<-10
x<-c(0:n)
df<-data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
plot(df)
n<-10000
x<-c(0:n)
df<-data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
plot(df)
n<-1000
x<-c(0:n)
df<-data.frame(x=x,d=dbinom(x,n,.5),p=pbinom(x,n,.5))
plot(df)
( v <- c( 2, 5, 4, 10, 8 ) )
(
v * v
)
v * v
(
vSqr <- v * v
)
(
v.minus.6 <- v - 6
)
?data
data()
ChickWeight
data("ChickWeight")
chickwts
chckwhts <- data( "ChickWeight" )
(
data( "ChickWeight" )
)
dim( ChickWeight )
dim( ChickWeight )
nrow( ChickWeight )
ncol( ChickWeight )
summary( ChickWeight )
min( ChickWeight$weight )
mean( ChickWeight$weight )
max( ChickWeight$weight )
min( ChickWeight$Time )
mean( ChickWeight$Time )
max( ChickWeight$Time )
min( ChickWeight$weight )
head( ChickWeight )
ChickWeight
reorder(ChickWeight$weight)
order(ChickWeight$weight)
(ChickWeight$weight)
sort(ChickWeight$weight)
ChickWeight[ sort(ChickWeight$weight),]
ChickWeight[ order(ChickWeight$weight),]
View(ChickWeight)
order(ChickWeight$weight)
order(ChickWeight$weight,ChickWeight$Time)
order(ChickWeight$weight,ChickWeight$Time)
ChickWeight[ order( ChickWeight$weight, ChickWeight$Time ), ]
ChickWeight[ order( names( ChickWeight ) ), ]
ChickWeight[ order( names( c( ChickWeight$weight, ChickWeight$Time ) ), ]
ChickWeight[ order( c( ChickWeight$weight, ChickWeight$Time ) ), ]
ChickWeight[ order( c( names( ChickWeight ) ) ), ]
ChickWeight[ order( ChickWeight$Chick, ]
ChickWeight[ order( ChickWeight$Chick ), ]
ChickWeight[ order( ChickWeight$Chick ), ]
typeof( ChickWeight$Chick)
summary( ChickWeight$Chick)
summary( ChickWeight$Chick )
summary( ChickWeight$Time )
typeof( ChickWeight$Time)
summary( ChickWeight$Chick )
( ChickWeight$Chick )
typeof( ChickWeight$Time)
typeof( ChickWeight$Chick)
ChickWeight[ order( as.numeric( ChickWeight$Chick ) ), ]
ChickWeight[ order( as.numeric( ChickWeight$Chick ), decreasing = T ), ]
ChickWeight[ order( as.numeric( ChickWeight$Chick ), decreasing = F ), ]
ChickWeight[ order( as.numeric( ChickWeight$Chick ), decreasing = T ), ]
data( "ChickWeight" )
head( ChickWeight )
### how many observations and how many variables? How did you get the information?
dim( ChickWeight )
nrow( ChickWeight )
ncol( ChickWeight )
### what is the mean, min and max of weight and Time
min( ChickWeight$weight )
mean( ChickWeight$weight )
max( ChickWeight$weight )
min( ChickWeight$Time )
mean( ChickWeight$Time )
max( ChickWeight$Time )
summary( ChickWeight$weight )
summary( ChickWeight$time )
summary( ChickWeight )
ChickWeight[ order( ChickWeight$Chick ), ]
ChickWeight[ order( 1 ), ]
ChickWeight[ order( 2 ), ]
ChickWeight[ order( ChickWeight ), ]
ChickWeight[ order( ChickWeightDiet ), ]
ChickWeight[ order( ChickWeight$Diet ), ]
plot( ChickWeight$weight )
plot( ChickWeight$weight ~ ChickWeight$Diet )
getwd( )
setwd( "~/Dokumente/RLearning/MandysKurs/20161128/2016kurs/session2/")
getwd( )
install.packages( "ggplot2" )
